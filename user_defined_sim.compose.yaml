services:
  snowglobe:
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    command: ["snowglobe_simulation", "-c", "/config/WoTRM.yaml", "-l", "/home/snowglobe/logs/snowglobe.log", "--runs", "5", "--simulation-name", "WoTR", "--simulation-mode"]
    # command: "tail -f /dev/null"
    image: snowglobe:latest
    stdin_open: true # docker run -i
    tty: true # docker run -t
    container_name: snowglobe
    hostname: snowglobe
    healthcheck:
      test: bash -c "[ -f /data/snowglobe/game.id ]"
      timeout: 3s
      retries: 20
    volumes:
      - '${PWD}/config:/config'
      - '${PWD}/logs:/home/snowglobe/logs'
      - '${PWD}/data:/data/snowglobe'
    # ports:
    #   - 8080:8000

  snowglobe-ui:
    build:
      context: .
      dockerfile: Dockerfile
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu]
    command: "snowglobe_server -c /config/WoTRM.yaml"
    image: snowglobe:latest
    stdin_open: true # docker run -i
    tty: true # docker run -t
    container_name: snowglobe-ui
    hostname: snowglobe-ui
    volumes:
      - '${PWD}/config:/config'
      - '${PWD}/logs:/home/snowglobe/logs'
      - '${PWD}/data:/data/snowglobe'
    ports:
      - 8080:8000
    depends_on:
      snowglobe:
        condition: service_healthy
